// This file is auto-generated by @hey-api/openapi-ts

/**
 * BaseBase
 */
export type BaseBase = {
    /**
     * Name
     */
    name: string;
    /**
     * Baseid
     */
    baseId: string;
};

/**
 * BasePublicWithTables
 */
export type BasePublicWithTables = {
    /**
     * Name
     */
    name: string;
    /**
     * Baseid
     */
    baseId: string;
    /**
     * Id
     */
    id: number;
    /**
     * Tables
     */
    tables: Array<TablePublic>;
};

/**
 * Change
 */
export type Change = {
    /**
     * Sourcebaseid
     */
    sourceBaseId: string;
    /**
     * Sourcetablename
     */
    sourceTableName: string;
    /**
     * Destinationbaseid
     */
    destinationBaseId: string;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * TablePublic
 */
export type TablePublic = {
    /**
     * Name
     */
    name: string;
    /**
     * Baseid
     */
    baseId?: number | null;
    /**
     * Tableid
     */
    tableId: string;
    /**
     * Id
     */
    id: number;
};

/**
 * TablePublicWithBase
 */
export type TablePublicWithBase = {
    /**
     * Name
     */
    name: string;
    /**
     * Baseid
     */
    baseId?: number | null;
    /**
     * Tableid
     */
    tableId: string;
    /**
     * Id
     */
    id: number;
    base: BaseBase;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type ReadBasesBasesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/bases';
};

export type ReadBasesBasesGetResponses = {
    /**
     * Response Read Bases Bases Get
     * Successful Response
     */
    200: Array<BasePublicWithTables>;
};

export type ReadBasesBasesGetResponse = ReadBasesBasesGetResponses[keyof ReadBasesBasesGetResponses];

export type ReadTablesTablesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/tables/';
};

export type ReadTablesTablesGetResponses = {
    /**
     * Response Read Tables Tables  Get
     * Successful Response
     */
    200: Array<TablePublicWithBase>;
};

export type ReadTablesTablesGetResponse = ReadTablesTablesGetResponses[keyof ReadTablesTablesGetResponses];

export type ChangeChangePostData = {
    body: Change;
    path?: never;
    query?: never;
    url: '/change';
};

export type ChangeChangePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ChangeChangePostError = ChangeChangePostErrors[keyof ChangeChangePostErrors];

export type ChangeChangePostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};